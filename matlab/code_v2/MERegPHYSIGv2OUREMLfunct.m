function LL=MERegPHYSIGv2OUREMLfunct(parameters)	global CX CY MX MY nX nY p tipsum ib jb mb nb counter		n=length(nY);	parameters=full(sparse(ib,jb,parameters,mb,nb));	b=parameters(1:p-1)';		sE=abs(parameters(p));	s2=parameters(p+1:end-1);	d=abs(parameters(end));		if d>2		LL=10^10;		return	end		if d<10^-4		d=10^-4;	end		%[b' sE s2 d]	CYd=real(d.^tipsum.*(1-d.^(2*CY))/(1-d^2));		if p==1		% no independent variables		VYY=sE^2*CYd+MY;		VV=VYY;	else		% independent variables present		s2X=zeros(p-1,p-1);		ii=1;		for i=1:p-1			for j=i:p-1				s2X(i,j)=s2(ii);				ii=ii+1;			end		end		s2X=s2X+s2X'-diag(diag(s2X));		s2X=s2X^2;				vX=s2X;		VX=CX.*kron(vX,ones(n,n));		VX=VX+MX;		vXY=vX.*(b*ones(1,p-1))';		vXY=CX.*kron(vXY,ones(n,n));		vYY=vX.*(b*b');		vYY=CX.*kron(vYY,ones(n,n));		VXY=zeros(n*(p-1),n);		VYY=zeros(n,n);		for i=1:p-1			VXY=VXY + vXY(:,n*(i-1)+1:n*i);			for j=1:p-1				VYY=VYY + vYY(n*(i-1)+1:n*i,n*(j-1)+1:n*j);			end		end		VYY=VYY+sE^2*CYd+MY;		VV=[VX VXY;VXY' VYY];	end	invVV=VV\eye(p*n);	Z=kron(eye(p),ones(n,1));	w=kron(eye(p),[nX nY]);	W=w(:,1:p+1:end);		a=(Z'*invVV*Z)\(Z'*invVV*W);	a=diag(a);		if p==1		aY=a;		H=nY-aY; 	else		aX=a(1:p-1);		aY=a(p);		aXv=ones(n,1)*aX';		H=[nX(:)-aXv(:);nY-aY]; 	end	LL=.5*(log(det(VV)) + log(det(Z'*invVV*Z)) + H'*invVV*H);	if ~isreal(LL) | isinf(LL)		LL=10^10;	end	% 	counter=counter+1;% 	if mod(counter,10)==1% 		[LL parameters]% 	end