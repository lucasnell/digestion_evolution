function LL=MERegPHYSIGv2OUREMLfunct(parameters)	global CX CY MX MY nX nY nU p q tipsum ib jb mb nb counter		n=length(nY);	parameters=full(sparse(ib,jb,parameters,mb,nb));	b=parameters(1:p)';		sE=abs(parameters(p+1));	s=parameters(p+2:end-1);	d=abs(parameters(end));			if d>2		LL=10^10;		return	end		if d<10^-5		d=10^-5;	end		%[b' sE s2 d]	CYd=real(d.^tipsum.*(1-d.^(2*CY))/(1-d^2));		if p==0		% no random independent variables		VYY=sE^2*CYd+MY;		VV=VYY;	else		% random independent variables present		sX=zeros(p,p);		ii=1;		for i=1:p			for j=i:p				sX(i,j)=s(ii);				ii=ii+1;			end		end		sX=sX+sX'-diag(diag(sX));		s2X=sX^2;				vX=s2X;		VX=CX.*kron(vX,ones(n,n));		VX=VX+MX;		vXY=vX.*(b*ones(1,p))';		vXY=CX.*kron(vXY,ones(n,n));		vYY=vX.*(b*b');		vYY=CX.*kron(vYY,ones(n,n));		VXY=zeros(n*p,n);		VYY=zeros(n,n);		for i=1:p			VXY=VXY + vXY(:,n*(i-1)+1:n*i);			for j=1:p				VYY=VYY + vYY(n*(i-1)+1:n*i,n*(j-1)+1:n*j);			end		end		VYY=VYY+sE^2*CYd+MY;		VV=[VX VXY;VXY' VYY];	end	invVV=VV\eye((p+1)*n);	Z=kron(eye(1+p),ones(n,1));	Z=[Z [zeros(n*p,q);nU]];	w=kron(eye(q+1+p),[nX nY]);	W=[nX(:);nY];		a=(Z'*invVV*Z)\(Z'*invVV*W);	H=W-Z*a;		LL=.5*(log(det(VV)) + log(det(Z'*invVV*Z)) + H'*invVV*H);	if ~isreal(LL) | isinf(LL)		LL=10^10;	end	% 	counter=counter+1;% 	if mod(counter,1000)==1% 		[LL parameters]% 	end